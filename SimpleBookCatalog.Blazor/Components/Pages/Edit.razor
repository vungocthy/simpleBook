@page "/edit/{id:int}"
@inject IBookRepository Repository
@inject NavigationManager Navigation

<PageTitle>
    Edit Book
</PageTitle>

    <div class="row justify-content-center"> 
    <div class="col-6">
       @*  <EditForm Enhance="true" method="post" FormName="EditBookForm" Model="Book" autocomplete="off" OnValidSubmit="EditBook">
            <h3>Edit Book @Id</h3>
            <input type="hidden" name="Book.Id" value="@Book.Id"/>
            <div class="mb-3">
                <label for="title" class="form-label">
                    Title
                </label>
                <InputText id="title" @bind-Value="Book.Title" class="form-control shadow-none"/>
            </div>
            <div class="mb-3">
                <label for="author" class="form-label">
                    Author
                </label>
                <InputText id="author" @bind-Value="Book.Author" class="form-control shadow-none" />
            </div>
            <div class="mb-3">
                <label for="publication-date" class="form-label">
                    Date Published
                </label>
                <InputDate id="publication-date" @bind-Value="Book.PublicationDate" class="form-control shadow-none" />
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">
                    Category
                </label>
                <InputSelect id="category" @bind-Value="Book.Category" class="form-control shadow-none">
                    <option value="0">
                        Select Category
                    </option>
                    @foreach(var category in Enum.GetValues(typeof(Category)))
                    {
                        <option value="@category">
                            @category.ToString()
                        </option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <button class="btn btn-primary shadow-none">
                    Submit
                </button>
                <a href="/" class="btn btn-secondary shadow-none ms-3" data-enhance-nav="false">
                    Back to list
                </a>
            </div>
            @* <DataAnnotationsValidator/>
            <RequiredFieldValidator/>
            <ValidationSummary/>
        </EditForm> *@
        <BookForm IsEditMode="true" BookId="@Id" OnValidBookSubmit="EditBook"/>
    </div>
</div>


@code {
    [Parameter]
    public int Id { get; set; }

    // [SupplyParameterFromForm]
    // public Book? Book { get; set; }

    // protected override async Task OnInitializedAsync()
    // {
    //     Book ??= await Repository.GetByIdAsync(Id);
    // }

    private async Task EditBook(Book book)
    {
        if(book is not null)
        {
            await Repository.UpdateAsync(book);
            Navigation.NavigateTo("/");
        }
    }
}
